const header = document.getElementById('header');
const scrollBtn = document.getElementById('scrollTopBtn');
const langToggle = document.getElementById('langToggle');
const flagIcon = document.getElementById('flagIcon');
const themeToggle = document.getElementById('themeToggle');
const themeIcon = document.getElementById('themeIcon');

let currentLang = 'vi';
let isShrunk = false;
let isExpanded = true;

// Ng√¥n ng·ªØ
langToggle.addEventListener('click', () => {
  const viTexts = document.querySelectorAll('.lang.vi');
  const enTexts = document.querySelectorAll('.lang.en');

  if (currentLang === 'vi') {
    viTexts.forEach(el => el.style.display = 'none');
    enTexts.forEach(el => el.style.display = 'inline');
    flagIcon.src = 'https://flagcdn.com/w40/us.png';
    currentLang = 'en';
  } else {
    viTexts.forEach(el => el.style.display = 'inline');
    enTexts.forEach(el => el.style.display = 'none');
    flagIcon.src = 'https://flagcdn.com/w40/vn.png';
    currentLang = 'vi';
  }
});

// Chuy·ªÉn theme s√°ng/t·ªëi
themeToggle.addEventListener('click', () => {
  document.body.classList.toggle('dark');
  themeIcon.textContent = document.body.classList.contains('dark') ? '‚òÄÔ∏è' : 'üåô';
});

// Hi·ªáu ·ª©ng header thu nh·ªè
window.addEventListener('scroll', () => {
  if (window.scrollY > 100) {
    scrollBtn.style.display = 'block';
    if (isExpanded) {
      header.classList.add('shrink');
      isShrunk = true;
      isExpanded = false;
    }
  } else {
    scrollBtn.style.display = 'none';
    header.classList.remove('shrink');
    isShrunk = false;
    isExpanded = true;
  }
});

// M·ªü l·∫°i header khi click
header.addEventListener('click', () => {
  if (isShrunk) {
    header.classList.remove('shrink');
    isShrunk = false;
    isExpanded = true;
  }
});

// responsive
function checkResize() {
  if (window.innerWidth < 990) {
    header.classList.add('shrink');
    header.classList.remove('expand');
    isExpanded = false;
  } else {
    header.classList.remove('shrink');
    header.classList.remove('expand');
    isExpanded = false;
  }
}

window.addEventListener('load', checkResize);
window.addEventListener('resize', checkResize);

header.addEventListener('click', () => {
  if (window.innerWidth < 990) {
    isExpanded = !isExpanded;
    header.classList.toggle('expand', isExpanded);
  }
});

const scrollTopBtn = document.getElementById('scrollTopBtn');
window.addEventListener('scroll', () => {
  scrollTopBtn.style.display = window.scrollY > 200 ? 'block' : 'none';
});
scrollTopBtn.addEventListener('click', () => {
  window.scrollTo({ top: 0, behavior: 'smooth' });
});
// Cu·ªôn v·ªÅ ƒë·∫ßu trang
scrollBtn.addEventListener('click', () => {
  window.scrollTo({ top: 0, behavior: 'smooth' });
});

// Popup functionality
document.addEventListener('DOMContentLoaded', () => {
  const popupOverlay = document.getElementById('popupOverlay');
  const popupClose = document.getElementById('popupClose');
  const timelineItems = document.querySelectorAll('.timeline-item');

  console.log('Found timeline items:', timelineItems.length);

  // Popup data
  const popupData = {
    edu1: {
      image: "/image/about_image/thptmdc.jpg",
      titleVi: 'THPT M·∫°c ƒêƒ©nh Chi',
      titleEn: 'Mac Dinh Chi High School',
      descriptionVi: 'THPT M·∫°c ƒêƒ©nh Chi l√† n∆°i em tr∆∞·ªüng th√†nh, h·ªçc ƒë∆∞·ª£c c√°ch suy nghƒ© ƒë·ªôc l·∫≠p v√† ph√°t tri·ªÉn b·∫£n th√¢n to√†n di·ªán.',
      descriptionEn: 'Mac Dinh Chi High School is where I matured, learned to think independently, and grew as a person.'
    },
    edu2: {
      image: '/image/about_image/ththsaigon.jpeg',
      titleVi: 'THTH S√†i G√≤n',
      titleEn: 'S√†i G√≤n Secondary School',
      descriptionVi: 'Nh·ªØng nƒÉm h·ªçc t·∫°i Trung h·ªçc Th·ª±c h√†nh S√†i G√≤n l√† kho·∫£ng th·ªùi gian em b·∫Øt ƒë·∫ßu kh√°m ph√° b·∫£n th√¢n v√† h√¨nh th√†nh nh·ªØng ∆∞·ªõc m∆° ƒë·∫ßu ti√™n.',
      descriptionEn: 'My years at Saigon Experimental Secondary School were when I began discovering myself and forming my earliest dreams.'
    },
    edu3: {
      image: '/image/about_image/tieuhocminhkhai.png',
      titleVi: 'Ti·ªÉu h·ªçc Minh Khai',
      titleEn: 'Minh Khai Primary School',
      descriptionVi: 'Khi c√≤n h·ªçc ·ªü ti·ªÉu h·ªçc Minh Khai, em ƒë√£ c√≥ nhi·ªÅu k·ª∑ ni·ªám ƒë·∫πp v√† nh·ªØng b√†i h·ªçc ƒë·∫ßu ƒë·ªùi qu√Ω gi√°.',
      descriptionEn: 'When I was studying at Minh Khai Primary School, I had many beautiful memories and learned valuable lessons in my early years. '
    },
    exp1: {
      image: '/image/about_image/ielts.png',
      titleVi: 'IELTS',
      titleEn: 'IELTS',
      descriptionVi: 'Vi·ªác ƒë·∫°t ƒë∆∞·ª£c b·∫±ng IELTS kh√¥ng ch·ªâ l√† m·ªôt th√†nh t√≠ch h·ªçc thu·∫≠t m√† c√≤n m·ªü ra cho em nhi·ªÅu c∆° h·ªôi v∆∞∆°n ra th·∫ø gi·ªõi.',
      descriptionEn: 'Earning the IELTS certificate was not just an academic milestone, but also a gateway to global opportunities.'
    },
    exp2: {
      image: '/image/about_image/mindx.jpeg',
      titleVi: 'MindX',
      titleEn: 'MindX',
      descriptionVi: 'L·ªõp h·ªçc h·ªôi h·ªça t·∫°i MindX gi√∫p em th·ªÉ hi·ªán c·∫£m x√∫c qua t·ª´ng n√©t v·∫Ω v√† nu√¥i d∆∞·ª°ng ni·ªÅm ƒëam m√™ ngh·ªá thu·∫≠t.',
      descriptionEn: 'The art class at MindX allowed me to express emotions through every stroke and nurtured my passion for creativity.'
    },
    exp3: {
      image: '/image/about_image/design.png',
      titleVi: 'Thi·∫øt k·∫ø',
      titleEn: 'Design',
      descriptionVi: 'Kh√≥a h·ªçc thi·∫øt k·∫ø gi√∫p em hi·ªÉu r·∫±ng s√°ng t·∫°o kh√¥ng ch·ªâ l√† c·∫£m h·ª©ng, m√† c√≤n l√† k·ªπ nƒÉng c√≥ th·ªÉ r√®n luy·ªán m·ªói ng√†y.',
      descriptionEn: 'The design course taught me that creativity isn‚Äôt just inspiration ‚Äî it‚Äôs a skill that can be trained every day.'
    }
  };

  function showPopup(popupId) {
    console.log('Showing popup for:', popupId);
    const data = popupData[popupId];
    if (!data) {
      console.log('No data found for:', popupId);
      return;
    }

    // Update popup content
    const titleVi = popupOverlay.querySelector('.popup-title .lang.vi');
    const titleEn = popupOverlay.querySelector('.popup-title .lang.en');
    const descVi = popupOverlay.querySelector('.popup-description .lang.vi');
    const descEn = popupOverlay.querySelector('.popup-description .lang.en');
    const image = popupOverlay.querySelector('.popup-image img');
    const date = popupOverlay.querySelector('.popup-date');

    titleVi.textContent = data.titleVi;
    titleEn.textContent = data.titleEn;
    descVi.textContent = data.descriptionVi;
    descEn.textContent = data.descriptionEn;
    image.src = data.image;
    date.textContent = document.querySelector(`[data-popup="${popupId}"] .date`).textContent;

    // Show popup with animation
    popupOverlay.style.display = 'flex';
    setTimeout(() => {
      popupOverlay.classList.add('active');
    }, 10);

    // Prevent body scrolling
    document.body.style.overflow = 'hidden';
  }

  function hidePopup() {
    console.log('Hiding popup');
    popupOverlay.classList.remove('active');
    setTimeout(() => {
      popupOverlay.style.display = 'none';
    }, 300);

    // Restore body scrolling
    document.body.style.overflow = '';
  }

  // Add click event listeners
  timelineItems.forEach(item => {
    console.log('Adding click listener to:', item.getAttribute('data-popup'));
    item.style.cursor = 'pointer';
    item.addEventListener('click', () => {
      const popupId = item.getAttribute('data-popup');
      console.log('Timeline item clicked:', popupId);
      showPopup(popupId);
    });
  });

  popupClose.addEventListener('click', hidePopup);
  popupOverlay.addEventListener('click', (e) => {
    if (e.target === popupOverlay) {
      hidePopup();
    }
  });

  // Close popup on escape key
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      hidePopup();
    }
  });
});

// Showcase Section Functionality
document.addEventListener('DOMContentLoaded', () => {
  const mainArtwork = document.querySelector('.main-artwork .artwork-image');
  const artworkCard = document.querySelector('.artwork-card');
  const previewItems = document.querySelectorAll('.preview-item');
  const prevButton = document.querySelector('.nav-arrow.prev');
  const nextButton = document.querySelector('.nav-arrow.next');
  const detailsPanel = document.querySelector('.artwork-details');
  const detailsClose = document.querySelector('.details-close');

  // Add 3D tilt effect for main artwork
  artworkCard.addEventListener('mousemove', (e) => {
    const rect = artworkCard.getBoundingClientRect();
    const x = e.clientX - rect.left;
    const y = e.clientY - rect.top;
    
    const centerX = rect.width / 2;
    const centerY = rect.height / 2;
    
    const rotateX = ((y - centerY) / centerY) * -15;
    const rotateY = ((x - centerX) / centerX) * 15;
    
    artworkCard.style.transform = `perspective(1000px) rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale3d(1.05, 1.05, 1.05)`;
  });

  artworkCard.addEventListener('mouseleave', () => {
    artworkCard.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)';
  });

  let currentIndex = 0;
  const artworks = [
    {
      image: './image/image_web/Art/before_mindx/1.1.jpg',
      preview: './image/image_web/Art/before_mindx/1.1.jpg',
      title: { vi: 'S·∫Øc M√†u C·∫£m X√∫c', en: 'Colors of Emotion' },
      size: { vi: 'K√≠ch th∆∞·ªõc: 80x100 cm', en: 'Size: 80x100 cm' },
      medium: { vi: 'Ch·∫•t li·ªáu: Acrylic tr√™n canvas', en: 'Medium: Acrylic on canvas' },
      year: { vi: 'NƒÉm s√°ng t√°c: 2024', en: 'Year: 2024' },
      concept: {
        vi: '√ù t∆∞·ªüng: T√°c ph·∫©m th·ªÉ hi·ªán s·ª± giao thoa gi·ªØa nh·ªØng c·∫£m x√∫c m√£nh li·ªát th√¥ng qua vi·ªác s·ª≠ d·ª•ng c√°c m·∫£ng m√†u t∆∞∆°ng ph·∫£n v√† nh·ªØng ƒë∆∞·ªùng n√©t t·ª± do, ph√≥ng kho√°ng.',
        en: 'Concept: The artwork represents the interplay of intense emotions through the use of contrasting color fields and free, expressive lines.'
      }
    },
    {
      image: '/image/image_web/Art/while_mindx/2.13.jpg',
      preview: '/image/image_web/Art/while_mindx/2.13.jpg',
      title: { vi: 'V≈© ƒêi·ªáu C·ªßa M√†u S·∫Øc', en: 'Dance of Colors' },
      size: { vi: 'K√≠ch th∆∞·ªõc: 90x120 cm', en: 'Size: 90x120 cm' },
      medium: { vi: 'Ch·∫•t li·ªáu: D·∫ßu tr√™n canvas', en: 'Medium: Oil on canvas' },
      year: { vi: 'NƒÉm s√°ng t√°c: 2024', en: 'Year: 2024' },
      concept: {
        vi: '√ù t∆∞·ªüng: M·ªôt t√°c ph·∫©m v·ªÅ s·ª± chuy·ªÉn ƒë·ªông v√† nh·ªãp ƒëi·ªáu, n∆°i c√°c m√†u s·∫Øc t∆∞∆°ng t√°c v√† nh·∫£y m√∫a v·ªõi nhau t·∫°o n√™n m·ªôt b·∫£n h√≤a t·∫•u th·ªã gi√°c.',
        en: 'Concept: A piece about movement and rhythm, where colors interact and dance together creating a visual symphony.'
      }
    },
    {
      image: '/image/image_web/Art/after_mindx/3.1.jpg',
      preview: '/image/image_web/Art/after_mindx/3.1.jpg',
      title: { vi: 'Kh√¥ng Gian Tr·ª´u T∆∞·ª£ng', en: 'Abstract Space' },
      size: { vi: 'K√≠ch th∆∞·ªõc: 100x100 cm', en: 'Size: 100x100 cm' },
      medium: { vi: 'Ch·∫•t li·ªáu: Mixed media', en: 'Medium: Mixed media' },
      year: { vi: 'NƒÉm s√°ng t√°c: 2024', en: 'Year: 2024' },
      concept: {
        vi: '√ù t∆∞·ªüng: Kh√°m ph√° m·ªëi quan h·ªá gi·ªØa kh√¥ng gian v√† h√¨nh d·∫°ng th√¥ng qua vi·ªác s·ª≠ d·ª•ng c√°c k·ªπ thu·∫≠t h·ªón h·ª£p v√† l·ªõp ch·ªìng l·ªõp.',
        en: 'Concept: Exploring the relationship between space and form through mixed media techniques and layering.'
      }
    },
    {
      image: '/image/image_web/Art/after_mindx/3.2.jpg',
      preview: '/image/image_web/Art/after_mindx/3.2.jpg',
      title: { vi: 'H√≤a Quy·ªán', en: 'Fusion' },
      size: { vi: 'K√≠ch th∆∞·ªõc: 70x90 cm', en: 'Size: 70x90 cm' },
      medium: { vi: 'Ch·∫•t li·ªáu: Acrylic v√† m·ª±c', en: 'Medium: Acrylic and ink' },
      year: { vi: 'NƒÉm s√°ng t√°c: 2024', en: 'Year: 2024' },
      concept: {
        vi: '√ù t∆∞·ªüng: S·ª± k·∫øt h·ª£p gi·ªØa c√°c y·∫øu t·ªë t·ª± nhi√™n v√† h√¨nh h·ªçc, t·∫°o n√™n m·ªôt th·∫ø gi·ªõi tr·ª´u t∆∞·ª£ng n∆°i ranh gi·ªõi gi·ªØa h·ªØu c∆° v√† v√¥ c∆° tr·ªü n√™n m·ªù nh·∫°t.',
        en: 'Concept: A fusion of natural and geometric elements, creating an abstract world where the boundaries between organic and inorganic become blurred.'
      }
    }
  ];

  function showArtworkDetails(index) {
    const artwork = artworks[index];
    const currentLang = document.documentElement.lang || 'vi';
    
    const detailsContent = detailsPanel.querySelector('.details-content');
    detailsContent.innerHTML = `
      <h3>${artwork.title[currentLang]}</h3>
      <p>${artwork.size[currentLang]}</p>
      <p>${artwork.medium[currentLang]}</p>
      <p>${artwork.year[currentLang]}</p>
      <p>${artwork.concept[currentLang]}</p>
    `;
    
    detailsPanel.classList.remove('hidden');
    // Trigger reflow
    detailsPanel.offsetHeight;
    detailsPanel.classList.add('active');
  }

  function hideArtworkDetails() {
    detailsPanel.classList.remove('active');
    // Wait for transition to complete before hiding
    setTimeout(() => {
      detailsPanel.classList.add('hidden');
    }, 500);
  }

  function updateMainArtwork(index) {
    const artwork = artworks[index];
    
    // Add fade out effect
    mainArtwork.style.opacity = '0';
    artworkCard.style.transform = 'perspective(1000px) rotateX(0) rotateY(0) scale3d(1, 1, 1)';
    
    setTimeout(() => {
      mainArtwork.src = artwork.image;
      mainArtwork.style.opacity = '1';
      currentIndex = index;

      // Update preview states
      previewItems.forEach((item, i) => {
        if (i === index) {
          item.classList.add('active');
        } else {
          item.classList.remove('active');
        }
      });
    }, 300);
  }

  // Add click event to main artwork
  artworkCard.addEventListener('click', () => {
    showArtworkDetails(currentIndex);
  });

  // Initialize preview images
  previewItems.forEach((item, index) => {
    const img = item.querySelector('img');
    img.src = artworks[index].preview;
    
    item.addEventListener('click', () => {
      if (index !== currentIndex) {
        hideArtworkDetails();
        updateMainArtwork(index);
      }
    });
  });

  // Navigation buttons
  prevButton.addEventListener('click', () => {
    hideArtworkDetails();
    const newIndex = (currentIndex - 1 + artworks.length) % artworks.length;
    updateMainArtwork(newIndex);
  });

  nextButton.addEventListener('click', () => {
    hideArtworkDetails();
    const newIndex = (currentIndex + 1) % artworks.length;
    updateMainArtwork(newIndex);
  });

  // Close details panel
  detailsClose.addEventListener('click', hideArtworkDetails);

  // Close details when clicking outside
  detailsPanel.addEventListener('click', (e) => {
    if (e.target === detailsPanel) {
      hideArtworkDetails();
    }
  });

  // Initialize first artwork
  updateMainArtwork(0);
  // Ensure details panel is hidden initially
  detailsPanel.classList.add('hidden');

  // Update details content when language changes
  document.addEventListener('languageChanged', () => {
    if (detailsPanel.classList.contains('active')) {
      showArtworkDetails(currentIndex);
    }
  });
});

